{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.integrations_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar integrations_v1alpha;\n\n(function (integrations_v1alpha) {\n  /**\n   * Application Integration API\n   *\n   *\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const integrations = google.integrations('v1alpha');\n   * ```\n   */\n  class Integrations {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.callback = new Resource$Callback(this.context);\n      this.connectorPlatformRegions = new Resource$Connectorplatformregions(this.context);\n      this.projects = new Resource$Projects(this.context);\n    }\n\n  }\n\n  integrations_v1alpha.Integrations = Integrations;\n\n  class Resource$Callback {\n    constructor(context) {\n      this.context = context;\n    }\n\n    generateToken(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/callback:generateToken').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Callback = Resource$Callback;\n\n  class Resource$Connectorplatformregions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    enumerate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/connectorPlatformRegions:enumerate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Connectorplatformregions = Resource$Connectorplatformregions;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects = Resource$Projects;\n\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.appsScriptProjects = new Resource$Projects$Locations$Appsscriptprojects(this.context);\n      this.authConfigs = new Resource$Projects$Locations$Authconfigs(this.context);\n      this.certificates = new Resource$Projects$Locations$Certificates(this.context);\n      this.connections = new Resource$Projects$Locations$Connections(this.context);\n      this.integrations = new Resource$Projects$Locations$Integrations(this.context);\n      this.products = new Resource$Projects$Locations$Products(this.context);\n      this.sfdcInstances = new Resource$Projects$Locations$Sfdcinstances(this.context);\n    }\n\n    listTaskEntities(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}:listTaskEntities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations = Resource$Projects$Locations;\n\n  class Resource$Projects$Locations$Appsscriptprojects {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    link(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects:link').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Appsscriptprojects = Resource$Projects$Locations$Appsscriptprojects;\n\n  class Resource$Projects$Locations$Authconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Authconfigs = Resource$Projects$Locations$Authconfigs;\n\n  class Resource$Projects$Locations$Certificates {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Certificates = Resource$Projects$Locations$Certificates;\n\n  class Resource$Projects$Locations$Connections {\n    constructor(context) {\n      this.context = context;\n      this.runtimeActionSchemas = new Resource$Projects$Locations$Connections$Runtimeactionschemas(this.context);\n      this.runtimeEntitySchemas = new Resource$Projects$Locations$Connections$Runtimeentityschemas(this.context);\n    }\n\n    getConnectionSchemaMetadata(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/connections').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Connections = Resource$Projects$Locations$Connections;\n\n  class Resource$Projects$Locations$Connections$Runtimeactionschemas {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/runtimeActionSchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeactionschemas = Resource$Projects$Locations$Connections$Runtimeactionschemas;\n\n  class Resource$Projects$Locations$Connections$Runtimeentityschemas {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/runtimeEntitySchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeentityschemas = Resource$Projects$Locations$Connections$Runtimeentityschemas;\n\n  class Resource$Projects$Locations$Integrations {\n    constructor(context) {\n      this.context = context;\n      this.executions = new Resource$Projects$Locations$Integrations$Executions(this.context);\n      this.versions = new Resource$Projects$Locations$Integrations$Versions(this.context);\n    }\n\n    execute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    monitorexecutionstats(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}:monitorexecutionstats').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    schedule(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Integrations = Resource$Projects$Locations$Integrations;\n\n  class Resource$Projects$Locations$Integrations$Executions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Integrations$Executions = Resource$Projects$Locations$Integrations$Executions;\n\n  class Resource$Projects$Locations$Integrations$Versions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    archive(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:archive').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    deactivate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:deactivate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    publish(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['integrationVersion'],\n        pathParams: ['integrationVersion'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    validate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Integrations$Versions = Resource$Projects$Locations$Integrations$Versions;\n\n  class Resource$Projects$Locations$Products {\n    constructor(context) {\n      this.context = context;\n      this.authConfigs = new Resource$Projects$Locations$Products$Authconfigs(this.context);\n      this.certificates = new Resource$Projects$Locations$Products$Certificates(this.context);\n      this.integrations = new Resource$Projects$Locations$Products$Integrations(this.context);\n      this.integrationtemplates = new Resource$Projects$Locations$Products$Integrationtemplates(this.context);\n      this.sfdcInstances = new Resource$Projects$Locations$Products$Sfdcinstances(this.context);\n    }\n\n    createBundle(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}:createBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    listTaskEntities(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}:listTaskEntities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products = Resource$Projects$Locations$Products;\n\n  class Resource$Projects$Locations$Products$Authconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Authconfigs = Resource$Projects$Locations$Products$Authconfigs;\n\n  class Resource$Projects$Locations$Products$Certificates {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Certificates = Resource$Projects$Locations$Products$Certificates;\n\n  class Resource$Projects$Locations$Products$Integrations {\n    constructor(context) {\n      this.context = context;\n      this.executions = new Resource$Projects$Locations$Products$Integrations$Executions(this.context);\n      this.executionsnapshots = new Resource$Projects$Locations$Products$Integrations$Executionsnapshots(this.context);\n      this.versions = new Resource$Projects$Locations$Products$Integrations$Versions(this.context);\n    }\n\n    archiveBundle(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:archiveBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    execute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    monitorexecutionstats(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}:monitorexecutionstats').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    schedule(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations = Resource$Projects$Locations$Products$Integrations;\n\n  class Resource$Projects$Locations$Products$Integrations$Executions {\n    constructor(context) {\n      this.context = context;\n      this.suspensions = new Resource$Projects$Locations$Products$Integrations$Executions$Suspensions(this.context);\n    }\n\n    cancel(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions = Resource$Projects$Locations$Products$Integrations$Executions;\n\n  class Resource$Projects$Locations$Products$Integrations$Executions$Suspensions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    lift(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:lift').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/suspensions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    resolve(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:resolve').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions$Suspensions = Resource$Projects$Locations$Products$Integrations$Executions$Suspensions;\n\n  class Resource$Projects$Locations$Products$Integrations$Executionsnapshots {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/executionsnapshots').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executionsnapshots = Resource$Projects$Locations$Products$Integrations$Executionsnapshots;\n\n  class Resource$Projects$Locations$Products$Integrations$Versions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    archive(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:archive').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    deactivate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:deactivate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    download(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getBundle(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:getBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    publish(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['integrationVersion'],\n        pathParams: ['integrationVersion'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    updateBundle(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:updateBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    upload(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions:upload').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    validate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Versions = Resource$Projects$Locations$Products$Integrations$Versions;\n\n  class Resource$Projects$Locations$Products$Integrationtemplates {\n    constructor(context) {\n      this.context = context;\n      this.versions = new Resource$Projects$Locations$Products$Integrationtemplates$Versions(this.context);\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates = Resource$Projects$Locations$Products$Integrationtemplates;\n\n  class Resource$Projects$Locations$Products$Integrationtemplates$Versions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates$Versions = Resource$Projects$Locations$Products$Integrationtemplates$Versions;\n\n  class Resource$Projects$Locations$Products$Sfdcinstances {\n    constructor(context) {\n      this.context = context;\n      this.sfdcChannels = new Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels(this.context);\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances = Resource$Projects$Locations$Products$Sfdcinstances;\n\n  class Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels;\n\n  class Resource$Projects$Locations$Sfdcinstances {\n    constructor(context) {\n      this.context = context;\n      this.sfdcChannels = new Resource$Projects$Locations$Sfdcinstances$Sfdcchannels(this.context);\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances = Resource$Projects$Locations$Sfdcinstances;\n\n  class Resource$Projects$Locations$Sfdcinstances$Sfdcchannels {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Sfdcinstances$Sfdcchannels;\n})(integrations_v1alpha = exports.integrations_v1alpha || (exports.integrations_v1alpha = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","integrations_v1alpha","googleapis_common_1","require","Integrations","constructor","options","google","context","_options","callback","Resource$Callback","connectorPlatformRegions","Resource$Connectorplatformregions","projects","Resource$Projects","generateToken","paramsOrCallback","optionsOrCallback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","enumerate","locations","Resource$Projects$Locations","appsScriptProjects","Resource$Projects$Locations$Appsscriptprojects","authConfigs","Resource$Projects$Locations$Authconfigs","certificates","Resource$Projects$Locations$Certificates","connections","Resource$Projects$Locations$Connections","integrations","Resource$Projects$Locations$Integrations","products","Resource$Projects$Locations$Products","sfdcInstances","Resource$Projects$Locations$Sfdcinstances","listTaskEntities","create","link","delete","get","list","patch","runtimeActionSchemas","Resource$Projects$Locations$Connections$Runtimeactionschemas","runtimeEntitySchemas","Resource$Projects$Locations$Connections$Runtimeentityschemas","getConnectionSchemaMetadata","executions","Resource$Projects$Locations$Integrations$Executions","versions","Resource$Projects$Locations$Integrations$Versions","execute","monitorexecutionstats","schedule","archive","deactivate","publish","takeoverEditLock","validate","Resource$Projects$Locations$Products$Authconfigs","Resource$Projects$Locations$Products$Certificates","Resource$Projects$Locations$Products$Integrations","integrationtemplates","Resource$Projects$Locations$Products$Integrationtemplates","Resource$Projects$Locations$Products$Sfdcinstances","createBundle","Resource$Projects$Locations$Products$Integrations$Executions","executionsnapshots","Resource$Projects$Locations$Products$Integrations$Executionsnapshots","Resource$Projects$Locations$Products$Integrations$Versions","archiveBundle","suspensions","Resource$Projects$Locations$Products$Integrations$Executions$Suspensions","cancel","lift","resolve","download","getBundle","updateBundle","upload","Resource$Projects$Locations$Products$Integrationtemplates$Versions","sfdcChannels","Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels","Resource$Projects$Locations$Sfdcinstances$Sfdcchannels"],"sources":["/Users/juliahindle/Documents/GitHub/ceramics/node_modules/googleapis/build/src/apis/integrations/v1alpha.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.integrations_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar integrations_v1alpha;\n(function (integrations_v1alpha) {\n    /**\n     * Application Integration API\n     *\n     *\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const integrations = google.integrations('v1alpha');\n     * ```\n     */\n    class Integrations {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.callback = new Resource$Callback(this.context);\n            this.connectorPlatformRegions = new Resource$Connectorplatformregions(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    integrations_v1alpha.Integrations = Integrations;\n    class Resource$Callback {\n        constructor(context) {\n            this.context = context;\n        }\n        generateToken(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/callback:generateToken').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Callback = Resource$Callback;\n    class Resource$Connectorplatformregions {\n        constructor(context) {\n            this.context = context;\n        }\n        enumerate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/connectorPlatformRegions:enumerate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Connectorplatformregions = Resource$Connectorplatformregions;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    integrations_v1alpha.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.appsScriptProjects =\n                new Resource$Projects$Locations$Appsscriptprojects(this.context);\n            this.authConfigs = new Resource$Projects$Locations$Authconfigs(this.context);\n            this.certificates = new Resource$Projects$Locations$Certificates(this.context);\n            this.connections = new Resource$Projects$Locations$Connections(this.context);\n            this.integrations = new Resource$Projects$Locations$Integrations(this.context);\n            this.products = new Resource$Projects$Locations$Products(this.context);\n            this.sfdcInstances = new Resource$Projects$Locations$Sfdcinstances(this.context);\n        }\n        listTaskEntities(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}:listTaskEntities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Appsscriptprojects {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        link(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects:link').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Appsscriptprojects = Resource$Projects$Locations$Appsscriptprojects;\n    class Resource$Projects$Locations$Authconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Authconfigs = Resource$Projects$Locations$Authconfigs;\n    class Resource$Projects$Locations$Certificates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Certificates = Resource$Projects$Locations$Certificates;\n    class Resource$Projects$Locations$Connections {\n        constructor(context) {\n            this.context = context;\n            this.runtimeActionSchemas =\n                new Resource$Projects$Locations$Connections$Runtimeactionschemas(this.context);\n            this.runtimeEntitySchemas =\n                new Resource$Projects$Locations$Connections$Runtimeentityschemas(this.context);\n        }\n        getConnectionSchemaMetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/connections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Connections = Resource$Projects$Locations$Connections;\n    class Resource$Projects$Locations$Connections$Runtimeactionschemas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/runtimeActionSchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeactionschemas = Resource$Projects$Locations$Connections$Runtimeactionschemas;\n    class Resource$Projects$Locations$Connections$Runtimeentityschemas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/runtimeEntitySchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeentityschemas = Resource$Projects$Locations$Connections$Runtimeentityschemas;\n    class Resource$Projects$Locations$Integrations {\n        constructor(context) {\n            this.context = context;\n            this.executions = new Resource$Projects$Locations$Integrations$Executions(this.context);\n            this.versions = new Resource$Projects$Locations$Integrations$Versions(this.context);\n        }\n        execute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        monitorexecutionstats(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}:monitorexecutionstats').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        schedule(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations = Resource$Projects$Locations$Integrations;\n    class Resource$Projects$Locations$Integrations$Executions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations$Executions = Resource$Projects$Locations$Integrations$Executions;\n    class Resource$Projects$Locations$Integrations$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        archive(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:archive').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        deactivate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:deactivate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        publish(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['integrationVersion'],\n                pathParams: ['integrationVersion'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        validate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations$Versions = Resource$Projects$Locations$Integrations$Versions;\n    class Resource$Projects$Locations$Products {\n        constructor(context) {\n            this.context = context;\n            this.authConfigs = new Resource$Projects$Locations$Products$Authconfigs(this.context);\n            this.certificates = new Resource$Projects$Locations$Products$Certificates(this.context);\n            this.integrations = new Resource$Projects$Locations$Products$Integrations(this.context);\n            this.integrationtemplates =\n                new Resource$Projects$Locations$Products$Integrationtemplates(this.context);\n            this.sfdcInstances =\n                new Resource$Projects$Locations$Products$Sfdcinstances(this.context);\n        }\n        createBundle(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}:createBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listTaskEntities(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}:listTaskEntities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products = Resource$Projects$Locations$Products;\n    class Resource$Projects$Locations$Products$Authconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Authconfigs = Resource$Projects$Locations$Products$Authconfigs;\n    class Resource$Projects$Locations$Products$Certificates {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Certificates = Resource$Projects$Locations$Products$Certificates;\n    class Resource$Projects$Locations$Products$Integrations {\n        constructor(context) {\n            this.context = context;\n            this.executions =\n                new Resource$Projects$Locations$Products$Integrations$Executions(this.context);\n            this.executionsnapshots =\n                new Resource$Projects$Locations$Products$Integrations$Executionsnapshots(this.context);\n            this.versions =\n                new Resource$Projects$Locations$Products$Integrations$Versions(this.context);\n        }\n        archiveBundle(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:archiveBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        execute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        monitorexecutionstats(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}:monitorexecutionstats').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        schedule(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations = Resource$Projects$Locations$Products$Integrations;\n    class Resource$Projects$Locations$Products$Integrations$Executions {\n        constructor(context) {\n            this.context = context;\n            this.suspensions =\n                new Resource$Projects$Locations$Products$Integrations$Executions$Suspensions(this.context);\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions = Resource$Projects$Locations$Products$Integrations$Executions;\n    class Resource$Projects$Locations$Products$Integrations$Executions$Suspensions {\n        constructor(context) {\n            this.context = context;\n        }\n        lift(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:lift').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/suspensions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resolve(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:resolve').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions$Suspensions = Resource$Projects$Locations$Products$Integrations$Executions$Suspensions;\n    class Resource$Projects$Locations$Products$Integrations$Executionsnapshots {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/executionsnapshots').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executionsnapshots = Resource$Projects$Locations$Products$Integrations$Executionsnapshots;\n    class Resource$Projects$Locations$Products$Integrations$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        archive(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:archive').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        deactivate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:deactivate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getBundle(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:getBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        publish(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['integrationVersion'],\n                pathParams: ['integrationVersion'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateBundle(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:updateBundle').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions:upload').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        validate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:validate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Versions = Resource$Projects$Locations$Products$Integrations$Versions;\n    class Resource$Projects$Locations$Products$Integrationtemplates {\n        constructor(context) {\n            this.context = context;\n            this.versions =\n                new Resource$Projects$Locations$Products$Integrationtemplates$Versions(this.context);\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates = Resource$Projects$Locations$Products$Integrationtemplates;\n    class Resource$Projects$Locations$Products$Integrationtemplates$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates$Versions = Resource$Projects$Locations$Products$Integrationtemplates$Versions;\n    class Resource$Projects$Locations$Products$Sfdcinstances {\n        constructor(context) {\n            this.context = context;\n            this.sfdcChannels =\n                new Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances = Resource$Projects$Locations$Products$Sfdcinstances;\n    class Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels;\n    class Resource$Projects$Locations$Sfdcinstances {\n        constructor(context) {\n            this.context = context;\n            this.sfdcChannels =\n                new Resource$Projects$Locations$Sfdcinstances$Sfdcchannels(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances = Resource$Projects$Locations$Sfdcinstances;\n    class Resource$Projects$Locations$Sfdcinstances$Sfdcchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Sfdcinstances$Sfdcchannels;\n})(integrations_v1alpha = exports.integrations_v1alpha || (exports.integrations_v1alpha = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}