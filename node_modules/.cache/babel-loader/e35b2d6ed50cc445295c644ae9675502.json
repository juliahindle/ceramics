{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/juliahindle/Documents/GitHub/ceramics/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/juliahindle/Documents/GitHub/ceramics/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Users/juliahindle/Documents/GitHub/ceramics/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/juliahindle/Documents/GitHub/ceramics/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require('./utils'),\n    columnToLetter = _require.columnToLetter;\n\nvar GoogleSpreadsheetRow = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function GoogleSpreadsheetRow(parentSheet, rowNumber, data) {\n    var _this = this;\n\n    _classCallCheck(this, GoogleSpreadsheetRow);\n\n    this._sheet = parentSheet; // the parent GoogleSpreadsheetWorksheet instance\n\n    this._rowNumber = rowNumber; // the A1 row (1-indexed)\n\n    this._rawData = data;\n\n    var _loop = function _loop(i) {\n      var propName = _this._sheet.headerValues[i];\n      if (!propName) return \"continue\"; // skip empty header\n\n      Object.defineProperty(_this, propName, {\n        get: function get() {\n          return _this._rawData[i];\n        },\n        set: function set(newVal) {\n          _this._rawData[i] = newVal;\n        },\n        enumerable: true\n      });\n    };\n\n    for (var i = 0; i < this._sheet.headerValues.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    return this;\n  }\n\n  _createClass(GoogleSpreadsheetRow, [{\n    key: \"rowNumber\",\n    get: function get() {\n      return this._rowNumber;\n    } // TODO: deprecate rowIndex - the name implies it should be zero indexed :(\n\n  }, {\n    key: \"rowIndex\",\n    get: function get() {\n      return this._rowNumber;\n    }\n  }, {\n    key: \"a1Range\",\n    get: function get() {\n      return [this._sheet.a1SheetName, '!', \"A\".concat(this._rowNumber), ':', \"\".concat(columnToLetter(this._sheet.headerValues.length)).concat(this._rowNumber)].join('');\n    }\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var options,\n            response,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n\n                if (!this._deleted) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error('This row has been deleted - call getRows again before making updates.');\n\n              case 3:\n                _context.next = 5;\n                return this._sheet._spreadsheet.axios.request({\n                  method: 'put',\n                  url: \"/values/\".concat(encodeURIComponent(this.a1Range)),\n                  params: {\n                    valueInputOption: options.raw ? 'RAW' : 'USER_ENTERED',\n                    includeValuesInResponse: true\n                  },\n                  data: {\n                    range: this.a1Range,\n                    majorDimension: 'ROWS',\n                    values: [this._rawData]\n                  }\n                });\n\n              case 5:\n                response = _context.sent;\n                this._rawData = response.data.updatedData.values[0];\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }() // delete this row\n\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._deleted) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error('This row has been deleted - call getRows again before making updates.');\n\n              case 2:\n                _context2.next = 4;\n                return this._sheet._makeSingleUpdateRequest('deleteRange', {\n                  range: {\n                    sheetId: this._sheet.sheetId,\n                    startRowIndex: this._rowNumber - 1,\n                    // this format is zero indexed, because of course...\n                    endRowIndex: this._rowNumber\n                  },\n                  shiftDimension: 'ROWS'\n                });\n\n              case 4:\n                result = _context2.sent;\n                this._deleted = true;\n                return _context2.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _delete() {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.delete());\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function del() {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }() // alias to mimic old version of this module\n\n  }]);\n\n  return GoogleSpreadsheetRow;\n}();\n\nmodule.exports = GoogleSpreadsheetRow;","map":{"version":3,"names":["require","columnToLetter","GoogleSpreadsheetRow","parentSheet","rowNumber","data","_sheet","_rowNumber","_rawData","i","propName","headerValues","Object","defineProperty","get","set","newVal","enumerable","length","a1SheetName","join","options","_deleted","Error","_spreadsheet","axios","request","method","url","encodeURIComponent","a1Range","params","valueInputOption","raw","includeValuesInResponse","range","majorDimension","values","response","updatedData","_makeSingleUpdateRequest","sheetId","startRowIndex","endRowIndex","shiftDimension","result","delete","module","exports"],"sources":["/Users/juliahindle/Documents/GitHub/ceramics/node_modules/google-spreadsheet/lib/GoogleSpreadsheetRow.js"],"sourcesContent":["const { columnToLetter } = require('./utils');\n\nclass GoogleSpreadsheetRow {\n  constructor(parentSheet, rowNumber, data) {\n    this._sheet = parentSheet; // the parent GoogleSpreadsheetWorksheet instance\n    this._rowNumber = rowNumber; // the A1 row (1-indexed)\n    this._rawData = data;\n\n    for (let i = 0; i < this._sheet.headerValues.length; i++) {\n      const propName = this._sheet.headerValues[i];\n      if (!propName) continue; // skip empty header\n      Object.defineProperty(this, propName, {\n        get: () => this._rawData[i],\n        set: (newVal) => { this._rawData[i] = newVal; },\n        enumerable: true,\n      });\n    }\n\n    return this;\n  }\n\n  get rowNumber() { return this._rowNumber; }\n  // TODO: deprecate rowIndex - the name implies it should be zero indexed :(\n  get rowIndex() { return this._rowNumber; }\n  get a1Range() {\n    return [\n      this._sheet.a1SheetName,\n      '!',\n      `A${this._rowNumber}`,\n      ':',\n      `${columnToLetter(this._sheet.headerValues.length)}${this._rowNumber}`,\n    ].join('');\n  }\n\n  async save(options = {}) {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n\n    const response = await this._sheet._spreadsheet.axios.request({\n      method: 'put',\n      url: `/values/${encodeURIComponent(this.a1Range)}`,\n      params: {\n        valueInputOption: options.raw ? 'RAW' : 'USER_ENTERED',\n        includeValuesInResponse: true,\n      },\n      data: {\n        range: this.a1Range,\n        majorDimension: 'ROWS',\n        values: [this._rawData],\n      },\n    });\n    this._rawData = response.data.updatedData.values[0];\n  }\n\n  // delete this row\n  async delete() {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n\n    const result = await this._sheet._makeSingleUpdateRequest('deleteRange', {\n      range: {\n        sheetId: this._sheet.sheetId,\n        startRowIndex: this._rowNumber - 1, // this format is zero indexed, because of course...\n        endRowIndex: this._rowNumber,\n      },\n      shiftDimension: 'ROWS',\n    });\n    this._deleted = true;\n    return result;\n  }\n  async del() { return this.delete(); } // alias to mimic old version of this module\n}\n\nmodule.exports = GoogleSpreadsheetRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}