{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retail_v2beta = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar retail_v2beta;\n\n(function (retail_v2beta) {\n  /**\n   * Retail API\n   *\n   * Cloud Retail service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const retail = google.retail('v2beta');\n   * ```\n   */\n  class Retail {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.projects = new Resource$Projects(this.context);\n    }\n\n  }\n\n  retail_v2beta.Retail = Retail;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n      this.operations = new Resource$Projects$Operations(this.context);\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects = Resource$Projects;\n\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.catalogs = new Resource$Projects$Locations$Catalogs(this.context);\n      this.operations = new Resource$Projects$Locations$Operations(this.context);\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations = Resource$Projects$Locations;\n\n  class Resource$Projects$Locations$Catalogs {\n    constructor(context) {\n      this.context = context;\n      this.attributesConfig = new Resource$Projects$Locations$Catalogs$Attributesconfig(this.context);\n      this.branches = new Resource$Projects$Locations$Catalogs$Branches(this.context);\n      this.completionData = new Resource$Projects$Locations$Catalogs$Completiondata(this.context);\n      this.controls = new Resource$Projects$Locations$Catalogs$Controls(this.context);\n      this.models = new Resource$Projects$Locations$Catalogs$Models(this.context);\n      this.operations = new Resource$Projects$Locations$Catalogs$Operations(this.context);\n      this.placements = new Resource$Projects$Locations$Catalogs$Placements(this.context);\n      this.servingConfigs = new Resource$Projects$Locations$Catalogs$Servingconfigs(this.context);\n      this.userEvents = new Resource$Projects$Locations$Catalogs$Userevents(this.context);\n    }\n\n    completeQuery(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+catalog}:completeQuery').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['catalog'],\n        pathParams: ['catalog'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getAttributesConfig(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getCompletionConfig(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getDefaultBranch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+catalog}:getDefaultBranch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['catalog'],\n        pathParams: ['catalog'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/catalogs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    setDefaultBranch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+catalog}:setDefaultBranch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['catalog'],\n        pathParams: ['catalog'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    updateAttributesConfig(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    updateCompletionConfig(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs = Resource$Projects$Locations$Catalogs;\n\n  class Resource$Projects$Locations$Catalogs$Attributesconfig {\n    constructor(context) {\n      this.context = context;\n    }\n\n    addCatalogAttribute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+attributesConfig}:addCatalogAttribute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['attributesConfig'],\n        pathParams: ['attributesConfig'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    batchRemoveCatalogAttributes(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+attributesConfig}:batchRemoveCatalogAttributes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['attributesConfig'],\n        pathParams: ['attributesConfig'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    removeCatalogAttribute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+attributesConfig}:removeCatalogAttribute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['attributesConfig'],\n        pathParams: ['attributesConfig'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    replaceCatalogAttribute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+attributesConfig}:replaceCatalogAttribute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['attributesConfig'],\n        pathParams: ['attributesConfig'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Attributesconfig = Resource$Projects$Locations$Catalogs$Attributesconfig;\n\n  class Resource$Projects$Locations$Catalogs$Branches {\n    constructor(context) {\n      this.context = context;\n      this.operations = new Resource$Projects$Locations$Catalogs$Branches$Operations(this.context);\n      this.products = new Resource$Projects$Locations$Catalogs$Branches$Products(this.context);\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Branches = Resource$Projects$Locations$Catalogs$Branches;\n\n  class Resource$Projects$Locations$Catalogs$Branches$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Branches$Operations = Resource$Projects$Locations$Catalogs$Branches$Operations;\n\n  class Resource$Projects$Locations$Catalogs$Branches$Products {\n    constructor(context) {\n      this.context = context;\n    }\n\n    addFulfillmentPlaces(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+product}:addFulfillmentPlaces').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['product'],\n        pathParams: ['product'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    addLocalInventories(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+product}:addLocalInventories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['product'],\n        pathParams: ['product'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    import(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/products:import').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    removeFulfillmentPlaces(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+product}:removeFulfillmentPlaces').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['product'],\n        pathParams: ['product'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    removeLocalInventories(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+product}:removeLocalInventories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['product'],\n        pathParams: ['product'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    setInventory(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}:setInventory').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Branches$Products = Resource$Projects$Locations$Catalogs$Branches$Products;\n\n  class Resource$Projects$Locations$Catalogs$Completiondata {\n    constructor(context) {\n      this.context = context;\n    }\n\n    import(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/completionData:import').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Completiondata = Resource$Projects$Locations$Catalogs$Completiondata;\n\n  class Resource$Projects$Locations$Catalogs$Controls {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/controls').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/controls').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Controls = Resource$Projects$Locations$Catalogs$Controls;\n\n  class Resource$Projects$Locations$Catalogs$Models {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/models').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/models').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    pause(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    resume(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    tune(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}:tune').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Models = Resource$Projects$Locations$Catalogs$Models;\n\n  class Resource$Projects$Locations$Catalogs$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Operations = Resource$Projects$Locations$Catalogs$Operations;\n\n  class Resource$Projects$Locations$Catalogs$Placements {\n    constructor(context) {\n      this.context = context;\n    }\n\n    predict(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+placement}:predict').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['placement'],\n        pathParams: ['placement'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    search(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+placement}:search').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['placement'],\n        pathParams: ['placement'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Placements = Resource$Projects$Locations$Catalogs$Placements;\n\n  class Resource$Projects$Locations$Catalogs$Servingconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    addControl(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+servingConfig}:addControl').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['servingConfig'],\n        pathParams: ['servingConfig'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/servingConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/servingConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    predict(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+placement}:predict').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['placement'],\n        pathParams: ['placement'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    removeControl(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+servingConfig}:removeControl').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['servingConfig'],\n        pathParams: ['servingConfig'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    search(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+placement}:search').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['placement'],\n        pathParams: ['placement'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Servingconfigs = Resource$Projects$Locations$Catalogs$Servingconfigs;\n\n  class Resource$Projects$Locations$Catalogs$Userevents {\n    constructor(context) {\n      this.context = context;\n    }\n\n    collect(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/userEvents:collect').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    import(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/userEvents:import').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    purge(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/userEvents:purge').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    rejoin(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/userEvents:rejoin').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    write(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+parent}/userEvents:write').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Catalogs$Userevents = Resource$Projects$Locations$Catalogs$Userevents;\n\n  class Resource$Projects$Locations$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Locations$Operations = Resource$Projects$Locations$Operations;\n\n  class Resource$Projects$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  retail_v2beta.Resource$Projects$Operations = Resource$Projects$Operations;\n})(retail_v2beta = exports.retail_v2beta || (exports.retail_v2beta = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","retail_v2beta","googleapis_common_1","require","Retail","constructor","options","google","context","_options","projects","Resource$Projects","locations","Resource$Projects$Locations","operations","Resource$Projects$Operations","catalogs","Resource$Projects$Locations$Catalogs","Resource$Projects$Locations$Operations","attributesConfig","Resource$Projects$Locations$Catalogs$Attributesconfig","branches","Resource$Projects$Locations$Catalogs$Branches","completionData","Resource$Projects$Locations$Catalogs$Completiondata","controls","Resource$Projects$Locations$Catalogs$Controls","models","Resource$Projects$Locations$Catalogs$Models","Resource$Projects$Locations$Catalogs$Operations","placements","Resource$Projects$Locations$Catalogs$Placements","servingConfigs","Resource$Projects$Locations$Catalogs$Servingconfigs","userEvents","Resource$Projects$Locations$Catalogs$Userevents","completeQuery","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","getAttributesConfig","getCompletionConfig","getDefaultBranch","list","patch","setDefaultBranch","updateAttributesConfig","updateCompletionConfig","addCatalogAttribute","batchRemoveCatalogAttributes","removeCatalogAttribute","replaceCatalogAttribute","Resource$Projects$Locations$Catalogs$Branches$Operations","products","Resource$Projects$Locations$Catalogs$Branches$Products","get","addFulfillmentPlaces","addLocalInventories","create","delete","import","removeFulfillmentPlaces","removeLocalInventories","setInventory","pause","resume","tune","predict","search","addControl","removeControl","collect","purge","rejoin","write"],"sources":["/Users/juliahindle/Documents/GitHub/ceramics/node_modules/googleapis/build/src/apis/retail/v2beta.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retail_v2beta = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar retail_v2beta;\n(function (retail_v2beta) {\n    /**\n     * Retail API\n     *\n     * Cloud Retail service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const retail = google.retail('v2beta');\n     * ```\n     */\n    class Retail {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    retail_v2beta.Retail = Retail;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n            this.operations = new Resource$Projects$Operations(this.context);\n        }\n    }\n    retail_v2beta.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.catalogs = new Resource$Projects$Locations$Catalogs(this.context);\n            this.operations = new Resource$Projects$Locations$Operations(this.context);\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Catalogs {\n        constructor(context) {\n            this.context = context;\n            this.attributesConfig =\n                new Resource$Projects$Locations$Catalogs$Attributesconfig(this.context);\n            this.branches = new Resource$Projects$Locations$Catalogs$Branches(this.context);\n            this.completionData =\n                new Resource$Projects$Locations$Catalogs$Completiondata(this.context);\n            this.controls = new Resource$Projects$Locations$Catalogs$Controls(this.context);\n            this.models = new Resource$Projects$Locations$Catalogs$Models(this.context);\n            this.operations = new Resource$Projects$Locations$Catalogs$Operations(this.context);\n            this.placements = new Resource$Projects$Locations$Catalogs$Placements(this.context);\n            this.servingConfigs =\n                new Resource$Projects$Locations$Catalogs$Servingconfigs(this.context);\n            this.userEvents = new Resource$Projects$Locations$Catalogs$Userevents(this.context);\n        }\n        completeQuery(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+catalog}:completeQuery').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['catalog'],\n                pathParams: ['catalog'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getAttributesConfig(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getCompletionConfig(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getDefaultBranch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+catalog}:getDefaultBranch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['catalog'],\n                pathParams: ['catalog'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/catalogs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setDefaultBranch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+catalog}:setDefaultBranch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['catalog'],\n                pathParams: ['catalog'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateAttributesConfig(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateCompletionConfig(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs = Resource$Projects$Locations$Catalogs;\n    class Resource$Projects$Locations$Catalogs$Attributesconfig {\n        constructor(context) {\n            this.context = context;\n        }\n        addCatalogAttribute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+attributesConfig}:addCatalogAttribute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['attributesConfig'],\n                pathParams: ['attributesConfig'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        batchRemoveCatalogAttributes(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta/{+attributesConfig}:batchRemoveCatalogAttributes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['attributesConfig'],\n                pathParams: ['attributesConfig'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        removeCatalogAttribute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+attributesConfig}:removeCatalogAttribute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['attributesConfig'],\n                pathParams: ['attributesConfig'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        replaceCatalogAttribute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+attributesConfig}:replaceCatalogAttribute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['attributesConfig'],\n                pathParams: ['attributesConfig'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Attributesconfig = Resource$Projects$Locations$Catalogs$Attributesconfig;\n    class Resource$Projects$Locations$Catalogs$Branches {\n        constructor(context) {\n            this.context = context;\n            this.operations =\n                new Resource$Projects$Locations$Catalogs$Branches$Operations(this.context);\n            this.products =\n                new Resource$Projects$Locations$Catalogs$Branches$Products(this.context);\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Branches = Resource$Projects$Locations$Catalogs$Branches;\n    class Resource$Projects$Locations$Catalogs$Branches$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Branches$Operations = Resource$Projects$Locations$Catalogs$Branches$Operations;\n    class Resource$Projects$Locations$Catalogs$Branches$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        addFulfillmentPlaces(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+product}:addFulfillmentPlaces').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['product'],\n                pathParams: ['product'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        addLocalInventories(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+product}:addLocalInventories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['product'],\n                pathParams: ['product'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        import(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/products:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        removeFulfillmentPlaces(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+product}:removeFulfillmentPlaces').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['product'],\n                pathParams: ['product'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        removeLocalInventories(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+product}:removeLocalInventories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['product'],\n                pathParams: ['product'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setInventory(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}:setInventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Branches$Products = Resource$Projects$Locations$Catalogs$Branches$Products;\n    class Resource$Projects$Locations$Catalogs$Completiondata {\n        constructor(context) {\n            this.context = context;\n        }\n        import(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/completionData:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Completiondata = Resource$Projects$Locations$Catalogs$Completiondata;\n    class Resource$Projects$Locations$Catalogs$Controls {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/controls').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/controls').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Controls = Resource$Projects$Locations$Catalogs$Controls;\n    class Resource$Projects$Locations$Catalogs$Models {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/models').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/models').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        tune(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}:tune').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Models = Resource$Projects$Locations$Catalogs$Models;\n    class Resource$Projects$Locations$Catalogs$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Operations = Resource$Projects$Locations$Catalogs$Operations;\n    class Resource$Projects$Locations$Catalogs$Placements {\n        constructor(context) {\n            this.context = context;\n        }\n        predict(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+placement}:predict').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['placement'],\n                pathParams: ['placement'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+placement}:search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['placement'],\n                pathParams: ['placement'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Placements = Resource$Projects$Locations$Catalogs$Placements;\n    class Resource$Projects$Locations$Catalogs$Servingconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        addControl(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+servingConfig}:addControl').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['servingConfig'],\n                pathParams: ['servingConfig'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/servingConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/servingConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        predict(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+placement}:predict').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['placement'],\n                pathParams: ['placement'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        removeControl(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+servingConfig}:removeControl').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['servingConfig'],\n                pathParams: ['servingConfig'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+placement}:search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['placement'],\n                pathParams: ['placement'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Servingconfigs = Resource$Projects$Locations$Catalogs$Servingconfigs;\n    class Resource$Projects$Locations$Catalogs$Userevents {\n        constructor(context) {\n            this.context = context;\n        }\n        collect(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/userEvents:collect').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        import(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/userEvents:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        purge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/userEvents:purge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        rejoin(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/userEvents:rejoin').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        write(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+parent}/userEvents:write').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Catalogs$Userevents = Resource$Projects$Locations$Catalogs$Userevents;\n    class Resource$Projects$Locations$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Locations$Operations = Resource$Projects$Locations$Operations;\n    class Resource$Projects$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://retail.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    retail_v2beta.Resource$Projects$Operations = Resource$Projects$Operations;\n})(retail_v2beta = exports.retail_v2beta || (exports.retail_v2beta = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}