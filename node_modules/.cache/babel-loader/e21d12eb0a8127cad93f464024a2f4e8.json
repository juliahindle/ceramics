{"ast":null,"code":"const {\n  columnToLetter\n} = require('./utils');\n\nclass GoogleSpreadsheetRow {\n  constructor(parentSheet, rowNumber, data) {\n    this._sheet = parentSheet; // the parent GoogleSpreadsheetWorksheet instance\n\n    this._rowNumber = rowNumber; // the A1 row (1-indexed)\n\n    this._rawData = data;\n\n    for (let i = 0; i < this._sheet.headerValues.length; i++) {\n      const propName = this._sheet.headerValues[i];\n      if (!propName) continue; // skip empty header\n\n      Object.defineProperty(this, propName, {\n        get: () => this._rawData[i],\n        set: newVal => {\n          this._rawData[i] = newVal;\n        },\n        enumerable: true\n      });\n    }\n\n    return this;\n  }\n\n  get rowNumber() {\n    return this._rowNumber;\n  } // TODO: deprecate rowIndex - the name implies it should be zero indexed :(\n\n\n  get rowIndex() {\n    return this._rowNumber;\n  }\n\n  get a1Range() {\n    return [this._sheet.a1SheetName, '!', `A${this._rowNumber}`, ':', `${columnToLetter(this._sheet.headerValues.length)}${this._rowNumber}`].join('');\n  }\n\n  async save() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n    const response = await this._sheet._spreadsheet.axios.request({\n      method: 'put',\n      url: `/values/${encodeURIComponent(this.a1Range)}`,\n      params: {\n        valueInputOption: options.raw ? 'RAW' : 'USER_ENTERED',\n        includeValuesInResponse: true\n      },\n      data: {\n        range: this.a1Range,\n        majorDimension: 'ROWS',\n        values: [this._rawData]\n      }\n    });\n    this._rawData = response.data.updatedData.values[0];\n  } // delete this row\n\n\n  async delete() {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n    const result = await this._sheet._makeSingleUpdateRequest('deleteRange', {\n      range: {\n        sheetId: this._sheet.sheetId,\n        startRowIndex: this._rowNumber - 1,\n        // this format is zero indexed, because of course...\n        endRowIndex: this._rowNumber\n      },\n      shiftDimension: 'ROWS'\n    });\n    this._deleted = true;\n    return result;\n  }\n\n  async del() {\n    return this.delete();\n  } // alias to mimic old version of this module\n\n\n}\n\nmodule.exports = GoogleSpreadsheetRow;","map":{"version":3,"names":["columnToLetter","require","GoogleSpreadsheetRow","constructor","parentSheet","rowNumber","data","_sheet","_rowNumber","_rawData","i","headerValues","length","propName","Object","defineProperty","get","set","newVal","enumerable","rowIndex","a1Range","a1SheetName","join","save","options","_deleted","Error","response","_spreadsheet","axios","request","method","url","encodeURIComponent","params","valueInputOption","raw","includeValuesInResponse","range","majorDimension","values","updatedData","delete","result","_makeSingleUpdateRequest","sheetId","startRowIndex","endRowIndex","shiftDimension","del","module","exports"],"sources":["/Users/juliahindle/Documents/GitHub/ceramics/node_modules/google-spreadsheet/lib/GoogleSpreadsheetRow.js"],"sourcesContent":["const { columnToLetter } = require('./utils');\n\nclass GoogleSpreadsheetRow {\n  constructor(parentSheet, rowNumber, data) {\n    this._sheet = parentSheet; // the parent GoogleSpreadsheetWorksheet instance\n    this._rowNumber = rowNumber; // the A1 row (1-indexed)\n    this._rawData = data;\n\n    for (let i = 0; i < this._sheet.headerValues.length; i++) {\n      const propName = this._sheet.headerValues[i];\n      if (!propName) continue; // skip empty header\n      Object.defineProperty(this, propName, {\n        get: () => this._rawData[i],\n        set: (newVal) => { this._rawData[i] = newVal; },\n        enumerable: true,\n      });\n    }\n\n    return this;\n  }\n\n  get rowNumber() { return this._rowNumber; }\n  // TODO: deprecate rowIndex - the name implies it should be zero indexed :(\n  get rowIndex() { return this._rowNumber; }\n  get a1Range() {\n    return [\n      this._sheet.a1SheetName,\n      '!',\n      `A${this._rowNumber}`,\n      ':',\n      `${columnToLetter(this._sheet.headerValues.length)}${this._rowNumber}`,\n    ].join('');\n  }\n\n  async save(options = {}) {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n\n    const response = await this._sheet._spreadsheet.axios.request({\n      method: 'put',\n      url: `/values/${encodeURIComponent(this.a1Range)}`,\n      params: {\n        valueInputOption: options.raw ? 'RAW' : 'USER_ENTERED',\n        includeValuesInResponse: true,\n      },\n      data: {\n        range: this.a1Range,\n        majorDimension: 'ROWS',\n        values: [this._rawData],\n      },\n    });\n    this._rawData = response.data.updatedData.values[0];\n  }\n\n  // delete this row\n  async delete() {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n\n    const result = await this._sheet._makeSingleUpdateRequest('deleteRange', {\n      range: {\n        sheetId: this._sheet.sheetId,\n        startRowIndex: this._rowNumber - 1, // this format is zero indexed, because of course...\n        endRowIndex: this._rowNumber,\n      },\n      shiftDimension: 'ROWS',\n    });\n    this._deleted = true;\n    return result;\n  }\n  async del() { return this.delete(); } // alias to mimic old version of this module\n}\n\nmodule.exports = GoogleSpreadsheetRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}