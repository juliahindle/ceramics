[{"/Users/juliahindle/Documents/GitHub/ceramics/src/index.js":"1","/Users/juliahindle/Documents/GitHub/ceramics/src/App.js":"2","/Users/juliahindle/Documents/GitHub/ceramics/src/components/Header.js":"3","/Users/juliahindle/Documents/GitHub/ceramics/src/components/Sidebar.js":"4"},{"size":229,"mtime":1663453166848,"results":"5","hashOfConfig":"6"},{"size":3818,"mtime":1663453166841,"results":"7","hashOfConfig":"6"},{"size":114,"mtime":1663453166844,"results":"8","hashOfConfig":"6"},{"size":1417,"mtime":1663453166847,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mnvi1h",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliahindle/Documents/GitHub/ceramics/src/index.js",[],[],"/Users/juliahindle/Documents/GitHub/ceramics/src/App.js",["24","25","26"],[],"import 'styles/test.css'\nimport React, { useState } from 'react'\nimport Header from 'components/Header'\nimport Sidebar from 'components/Sidebar'\nimport glazes from 'data/glazes.json'\nimport bases from 'data/bases.json'\n\nfunction App() {\n    const BLANK_GLAZE = {glaze: {id: \"\", base: \"\", additives : []}, base: {id: \"\", name: \"\", recipe : []}};\n    const [selectedGlaze, setSelectedGlaze] = useState(BLANK_GLAZE)\n    const [showSidebar, setShowSidebar] = useState(false)\n\n    return (<>\n        <header>\n            <a href=\"/\">\n                <img src='logo.svg' alt='Website logo'/>\n            </a>\n            <nav>\n                <ul>\n                <li>About</li>\n                <li>Resources</li>\n                <li className=\"selected\">Glazes</li>\n                </ul>\n            </nav>\n        </header>\n\n\n        <main className={(showSidebar && \"aside-enabled\")}>\n            <section className=\"glazes\">\n                <div className=\"container\">\n                    {glazes.map(glaze => \n                        <img \n                            className={(selectedGlaze.glaze.id === glaze.id && \"selected\")}\n                            src={`images/glazes/2x/${glaze.id}.png`} \n                            alt={`glaze with id: ${glaze.id}`}\n                            onClick={() => {\n                                setSelectedGlaze({glaze: glaze, base: bases.find(base => (base.name === glaze.base))})\n                                setShowSidebar(true)\n                            }}\n                        />\n                    )}\n                </div>\n            </section>\n\n            <aside className=\"sidebar\">\n                <div className=\"container\">\n                    <button \n                        class=\"close-button\" \n                        aria-label=\"Close alert\" \n                        type=\"button\" \n                        onClick={() => {\n                            setShowSidebar(false)\n                            setTimeout(function() {\n                                setSelectedGlaze(BLANK_GLAZE)\n                            }.bind(this),600);\n                        }}>\n                        x\n                    </button>\n                    <img src={`images/glazes/2x/${selectedGlaze.glaze.id}.png`} alt={`glaze with id: ${selectedGlaze.glaze.id}`}/> \n\n                    <h2>Cone</h2>\n                    <p>Cone 6</p>\n\n                    <h2>Base Glaze</h2>\n                    <p>{selectedGlaze.glaze.base}</p>\n\n                    <h2>Clay</h2>\n                    <p>181 Stoneware</p>\n\n                    <h2>Recipe</h2>\n                    <table className=\"recipe\">\n                        <tbody>\n                            {selectedGlaze.base.recipe.map((part) =>\n                                <tr>\n                                    <td>{part.ingredient}</td>\n                                    <td>{part.amount}</td>\n                                </tr>\n                            )}\n                            <tr>\n                                <td>F4 Feldspar</td>\n                                <td>41</td>\n                            </tr>\n                                <tr className=\"add\">\n                                <td>Add:</td>\n                            </tr>\n                            {selectedGlaze.glaze.additives.map((part) =>\n                                <tr>\n                                    <td>{part.ingredient}</td>\n                                    <td>{part.amount}</td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n                {/* <Sidebar glaze={selectedGlaze.glaze} base={selectedGlaze.base}/> */}\n            </aside>\n        </main>\n    </>)\n}\n\nexport default App\n","/Users/juliahindle/Documents/GitHub/ceramics/src/components/Header.js",["27"],[],"import 'styles/test.css';\nimport React from 'react';\n\nfunction Header() {\n  return null\n}\n\nexport default Header;\n","/Users/juliahindle/Documents/GitHub/ceramics/src/components/Sidebar.js",[],[],{"ruleId":"28","severity":1,"message":"29","line":3,"column":8,"nodeType":"30","messageId":"31","endLine":3,"endColumn":14},{"ruleId":"28","severity":1,"message":"32","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":15},{"ruleId":"33","severity":1,"message":"34","line":55,"column":31,"nodeType":"35","messageId":"36","endLine":55,"endColumn":35,"fix":"37"},{"ruleId":"28","severity":1,"message":"38","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":13},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"39","text":"40"},"'React' is defined but never used.",[2091,2102],""]